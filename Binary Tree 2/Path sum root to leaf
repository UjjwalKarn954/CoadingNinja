
public class Solution {

/*	Binary Tree Node class
 * 
 * class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;
		
		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/
    public static void rootToLeafPathsSumToK(BinaryTreeNode<Integer> root, int k) {
		String s = "";
        print(root,k,s);
		
	}
	public static void print(BinaryTreeNode<Integer> root, int k,String s){
        if(root==null){return;}
        if((root.left==null && root.right==null)&& k==root.data){
            String s2 = s.concat(String.valueOf(root.data));
            System.out.println(s2);
        }
        if((root.left==null && root.right==null)&& k!=root.data){return;}
        
      String s1 = s.concat(String.valueOf(root.data)+" ");
        // s=s1;
        print(root.left,k-root.data,s1);
        print(root.right,k-root.data,s1);
        
    }
	
}
