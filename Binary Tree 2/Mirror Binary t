public class Solution {

    /*	Binary Tree Node class
 * 
 * class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/

    public static void mirror(BinaryTreeNode<Integer> root){
        /* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * No need to print or return the output.
		 * Taking input and printing output is handled automatically.
		 */
        root=mirrorhelper(root);

    }
    public static BinaryTreeNode<Integer> mirrorhelper(BinaryTreeNode<Integer> root){
        if(root==null){
            return root;
        }
        BinaryTreeNode<Integer>  temp = root.left;
        root.left=mirrorhelper(root.right);
        root.right=mirrorhelper(temp);
        return root;
    }
}
