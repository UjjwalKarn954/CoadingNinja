 class QueueEmptyException extends Exception{
    
}
public class Queue<T> {
   private Node<T> front;
   private Node<T> rear;
    private int size;
    

	public Queue() {
        front =null;
        rear=null;
        size=0;

	}

	public void enqueue(T data) {
        Node<T> newnode=new Node<>(data);

        if(rear==null ){
            front=newnode;
            rear=newnode;
            
        }else{
            rear.next=newnode;
            rear=newnode;//rear=rear.next;
        }
        size++;

	}

	public int size() {
        return size;

	}

	public boolean isEmpty() {
        return size==0;

	}

	public T dequeue() throws QueueEmptyException {
        T temp=front.data;
        if(front==null){
            throw new QueueEmptyException();
        }else{
            front=front.next;
        }
        if(front==null){
            rear=null;
        }
        size--;
        return temp;

	}

	public T front() throws QueueEmptyException {
        if(front==null){
            throw new QueueEmptyException();
        }else{
            return front.data;
        }

	}
}
